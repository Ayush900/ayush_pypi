name: Publish Python 🐍 distribution 📦 to PyPI

on:
  release:
    types:
      - published  # Trigger when a release is published

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install build twine --user

      - name: Build package distribution
        run: |
          cd ayush_py  # Ensure you are in the correct directory
          python3 -m build

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: ayush_py/dist/

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # Only on tag push
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
    permissions:
      id-token: write  # Mandatory for Trusted Publishing
    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        

  github-release:
    name: Create GitHub Release and sign the package
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # For creating GitHub Releases
      id-token: write  # For Sigstore to sign artifacts
    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the distribution with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ github.ref_name }} ./dist/*.tar.gz ./dist/*.whl
          --repo ${{ github.repository }}
          --notes "Release Notes"

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ github.ref_name }} ./dist/*.sig
          --repo ${{ github.repository }}
